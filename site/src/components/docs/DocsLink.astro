---
import { isValidFramework, isValidStyleForFramework } from '@/types/docs';
import { resolveDocsLinkUrl } from '@/utils/docs/routing';
import type { HTMLAttributes } from 'astro/types';
import A from '../typography/A.astro';

interface Props extends Omit<HTMLAttributes<'a'>, 'href'> {
  slug: string;
}
const { slug } = Astro.props;

const { framework: paramFramework, style: paramStyle } = Astro.params;
if (!paramFramework || !isValidFramework(paramFramework)) {
  throw new Error(`Invalid or missing framework param "${paramFramework ?? 'undefined'}".`);
}
if (!paramStyle || !isValidStyleForFramework(paramFramework, paramStyle)) {
  throw new Error(`Invalid style param "${paramStyle}" for framework "${paramFramework}".`);
}

const { url: href } = resolveDocsLinkUrl({
  targetSlug: slug,
  contextFramework: paramFramework,
  contextStyle: paramStyle,
});
---

<A href={href} data-astro-prefetch>
  <slot />
</A>
