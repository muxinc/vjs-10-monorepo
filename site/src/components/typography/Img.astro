---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import type { HTMLTag, Polymorphic } from 'astro/types';
import { clsx } from 'clsx';
import { twMerge } from 'tailwind-merge';

type Props<Tag extends HTMLTag = 'img'> = Polymorphic<{ as: Tag }> & {
  src: string | ImageMetadata;
  alt: string;
  maxWidth?: boolean;
  class?: string;
};

const { as: Tag = 'img', src, alt, maxWidth = true, class: className, ...props } = Astro.props;

const classes = twMerge(clsx('max-w-full h-auto my-12 rounded', maxWidth && 'max-w-3xl mx-auto'), className);
---

{
  typeof src === 'string' ? (
    <Tag src={src} alt={alt} class={classes} {...props} />
  ) : (
    <Image src={src} alt={alt} class={classes} {...props} />
  )
}
