.MediaContainer {
  position: relative;
  container-type: inline-size;
  container-name: root;
  overflow: clip;
  font-weight: 420;
  font-size: 0.8125rem;
  letter-spacing: -0.0125em;
}
@media (hover: hover) {
  &:where(.MediaContainer):hover {
    scale: 100% 100%;
  }
}
@media (hover: hover) {
  &:where(.MediaContainer):hover {
    opacity: 100%;
  }
}
@media (hover: hover) {
  &:where(.MediaContainer):hover {
    transition-delay: 0ms;
  }
}
.MediaContainer:fullscreen {
  border-radius: 0;
}
.MediaContainer:fullscreen video {
  height: 100%;
  width: 100%;
}
.MediaContainer::after {
  content: '';
  position: absolute;
  box-shadow: 0 0 #0000, 0 0 #0000, inset 0 0 0 calc(1px + 0px) rgb(59 130 246 / 0.5), 0 0 #0000;
  z-index: 10;
  pointer-events: none;
  border-radius: inherit;
}
.MediaContainer::before {
  content: '';
  position: absolute;
  inset: 1px;
  border-radius: inherit;
  box-shadow: 0 0 #0000, 0 0 #0000, inset 0 0 0 calc(1px + 0px) rgb(59 130 246 / 0.5), 0 0 #0000;
  z-index: 10;
  pointer-events: none;
}
.MediaContainer video {
  border-radius: inherit;
  width: 100%;
  height: auto;
}
.Overlay {
  opacity: 0%;
  transition-delay: 500ms;
  border-radius: inherit;
  position: absolute;
  pointer-events: none;
  z-index: 10;
  background-image: linear-gradient();
  transition-property: opacity;
  transition-timing-function: ease;
  transition-duration: 0s;
  -webkit-backdrop-filter: brightness(90%)      saturate(150%);
  backdrop-filter: brightness(90%) saturate(150%);
}
.Overlay:has(+.controls [data-paused]) {
  opacity: 100%;
  transition-delay: 0ms;
}
@media (hover: hover) {
  .Overlay:where(.group\/root):hover {
    opacity: 100%;
  }
}
@media (hover: hover) {
  .Overlay:where(.group\/root):hover {
    transition-delay: 0ms;
  }
}
&:has(+.Controls [data-paused]) {
  opacity: 100%;
  transition-delay: 0ms;
}
.Controls {
  container-type: inline-size;
  container-name: controls;
  position: absolute;
  border-radius: calc(infinity * 1px);
  z-index: 20;
  display: flex;
  align-items: center;
  box-shadow: 0 0 #0000, 0 0 #0000, inset 0 0 0 calc(1px + 0px) rgb(59 130 246 / 0.5), 0 0 #0000;
  -webkit-backdrop-filter: brightness(90%)      saturate(150%);
  backdrop-filter: brightness(90%) saturate(150%);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
  transition-timing-function: ease;
  transition-duration: 0s;
  will-change: transform;
  transform-origin: bottom;
  scale: 90% 90%;
  opacity: 0%;
  transition-delay: 500ms;
}
.Controls:has(*[data-paused]) {
  scale: 100% 100%;
  opacity: 100%;
  transition-delay: 0ms;
}
@media (hover: hover) {
  .Controls:where(.group\/root):hover {
    scale: 100% 100%;
  }
}
@media (hover: hover) {
  .Controls:where(.group\/root):hover {
    opacity: 100%;
  }
}
@media (hover: hover) {
  .Controls:where(.group\/root):hover {
    transition-delay: 0ms;
  }
}
.Controls::after {
  content: '';
  position: absolute;
  box-shadow: 0 0 #0000, 0 0 #0000, 0 0 0 calc(1px + 0px) rgb(59 130 246 / 0.5), 0 0 #0000;
  border-radius: inherit;
  pointer-events: none;
  z-index: 10;
}
@media (hover: hover) {
  &:where(.Button):hover * .arrow-1 {
    translate: -1px 0px;
  }
}
@media (hover: hover) {
  &:where(.Button):hover * .arrow-1 {
    translate: 0px -1px;
  }
}
@media (hover: hover) {
  &:where(.Button):hover * .arrow-2 {
    translate: 1px 0px;
  }
}
@media (hover: hover) {
  &:where(.Button):hover * .arrow-2 {
    translate: 0px 1px;
  }
}
.Button {
  cursor: pointer;
  position: relative;
  flex-shrink: 0;
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
  transition-timing-function: ease;
  transition-duration: 0s;
  -webkit-user-select: none;
  user-select: none;
  border-radius: calc(infinity * 1px);
  background-color: transparent;
  outline-offset: calc(2px * -1);
}
.Button:focus-visible {
  outline-width: 2px;
  outline-offset: 2px;
}
.Button[aria-disabled="true"] {
  filter: grayscale(100%);
  opacity: 50%;
  cursor: not-allowed;
}
.Button[aria-busy="true"] {
  pointer-events: none;
  cursor: not-allowed;
}
.Button:active {
  scale: 95% 95%;
}
.IconButton {
  display: grid;
}
.IconButton svg {
  grid-area: 1/1;
  flex-shrink: 0;
  transition-property: opacity;
  transition-timing-function: ease;
  transition-duration: 300ms;
  filter: drop-shadow(0 1px 0;
}
.PlayButton .pause-icon {
  opacity: 100%;
}
.PlayButton[data-paused] .pause-icon {
  opacity: 0%;
}
.PlayButton .play-icon {
  opacity: 0%;
}
.PlayButton[data-paused] .play-icon {
  opacity: 100%;
}
& .PlayIcon {
  opacity: 0%;
}
&[data-paused] .PlayIcon {
  opacity: 100%;
}
& .PauseIcon {
  opacity: 100%;
}
&[data-paused] .PauseIcon {
  opacity: 0%;
}
.VolumeButton svg {
  opacity: 0%;
}
.VolumeButton[data-volume-level="high"] .volume-high-icon {
  opacity: 100%;
}
.VolumeButton[data-volume-level="medium"] .volume-low-icon {
  opacity: 100%;
}
.VolumeButton[data-volume-level="low"] .volume-low-icon {
  opacity: 100%;
}
.VolumeButton[data-volume-level="off"] .volume-off-icon {
  opacity: 100%;
}
&[data-volume-level="high"] .VolumeHighIcon {
  opacity: 100%;
}
&[data-volume-level="low"] .VolumeLowIcon {
  opacity: 100%;
}
&[data-volume-level="medium"] .VolumeLowIcon {
  opacity: 100%;
}
&[data-volume-level="off"] .VolumeOffIcon {
  opacity: 100%;
}
.FullScreenButton .fullscreen-enter-icon {
  opacity: 100%;
}
.FullScreenButton[data-fullscreen] .fullscreen-enter-icon {
  opacity: 0%;
}
.FullScreenButton .fullscreen-exit-icon {
  opacity: 0%;
}
.FullScreenButton[data-fullscreen] .fullscreen-exit-icon {
  opacity: 100%;
}
.FullScreenButton path {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: ease;
  transition-duration: 0s;
}
& .FullScreenEnterIcon {
  opacity: 100%;
}
&[data-fullscreen] .FullScreenEnterIcon {
  opacity: 0%;
}
@media (hover: hover) {
  .FullScreenEnterIcon:where(.group\/button):hover * .arrow-1 {
    translate: -1px 0px;
  }
}
@media (hover: hover) {
  .FullScreenEnterIcon:where(.group\/button):hover * .arrow-1 {
    translate: 0px -1px;
  }
}
@media (hover: hover) {
  .FullScreenEnterIcon:where(.group\/button):hover * .arrow-2 {
    translate: 1px 0px;
  }
}
@media (hover: hover) {
  .FullScreenEnterIcon:where(.group\/button):hover * .arrow-2 {
    translate: 0px 1px;
  }
}
& .FullScreenExitIcon {
  opacity: 0%;
}
&[data-fullscreen] .FullScreenExitIcon {
  opacity: 100%;
}
.FullScreenExitIcon .arrow-1 {
  translate: -1px -1px;
}
.FullScreenExitIcon .arrow-2 {
  translate: 1px 1px;
}
.TimeControls {
  flex: 1;
  display: flex;
  align-items: center;
}
.TimeDisplay {
  font-variant-numeric: tabular-nums;
}
.TimeRangeRoot {
  display: flex;
  align-items: center;
  flex: 1;
  position: relative;
}
&:where(.TimeRangeRoot):focus-within {
  opacity: 100%;
}
@media (hover: hover) {
  &:where(.TimeRangeRoot):hover {
    opacity: 100%;
  }
}
.TimeRangeTrack {
  width: 100%;
  position: relative;
  -webkit-user-select: none;
  user-select: none;
  border-radius: calc(infinity * 1px);
  box-shadow: 0 0 #0000, 0 0 #0000, 0 0 0 calc(1px + 0px) rgb(59 130 246 / 0.5), 0 0 #0000;
}
.TimeRangeProgress {
  border-radius: inherit;
}
.TimeRangePointer {
  border-radius: inherit;
}
.TimeRangeThumb {
  z-index: 10;
  -webkit-user-select: none;
  user-select: none;
  box-shadow: 0 0 #0000, 0 0 #0000, 0 0 0 calc(1px + 0px) rgb(59 130 246 / 0.5), 0 0 #0000;
  border-radius: calc(infinity * 1px);
  opacity: 0%;
  transition-property: opacity,height,width;
  transition-timing-function: ease;
  transition-duration: 0s;
  outline-offset: calc(2px * -1);
}
.TimeRangeThumb:focus-visible {
  outline-width: 2px;
  outline-offset: 2px;
}
@media (hover: hover) {
  .TimeRangeThumb:where(.group\/slider):hover {
    opacity: 100%;
  }
}
.TimeRangeThumb:where(.group\/slider):focus-within {
  opacity: 100%;
}
.VolumeRangeRoot {
  display: flex;
  align-items: center;
  position: relative;
}
&:where(.VolumeRangeRoot):focus-within {
  opacity: 100%;
}
@media (hover: hover) {
  &:where(.VolumeRangeRoot):hover {
    opacity: 100%;
  }
}
.VolumeRangeTrack {
  width: 100%;
  position: relative;
  -webkit-user-select: none;
  user-select: none;
  border-radius: calc(infinity * 1px);
  box-shadow: 0 0 #0000, 0 0 #0000, 0 0 0 calc(1px + 0px) rgb(59 130 246 / 0.5), 0 0 #0000;
}
.VolumeRangeProgress {
  border-radius: inherit;
}
.VolumeRangeThumb {
  z-index: 10;
  -webkit-user-select: none;
  user-select: none;
  box-shadow: 0 0 #0000, 0 0 #0000, 0 0 0 calc(1px + 0px) rgb(59 130 246 / 0.5), 0 0 #0000;
  border-radius: calc(infinity * 1px);
  opacity: 0%;
  transition-property: opacity,height,width;
  transition-timing-function: ease;
  transition-duration: 0s;
  outline-offset: calc(2px * -1);
}
.VolumeRangeThumb:focus-visible {
  outline-width: 2px;
  outline-offset: 2px;
}
@media (hover: hover) {
  .VolumeRangeThumb:where(.group\/slider):hover {
    opacity: 100%;
  }
}
.VolumeRangeThumb:where(.group\/slider):focus-within {
  opacity: 100%;
}
