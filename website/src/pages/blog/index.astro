---
import { Image } from 'astro:assets';
import { getCollection, getEntries } from 'astro:content';

import FormattedDate from '@/components/FormattedDate.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '@/consts';
import Base from '@/layouts/Base.astro';

const posts = (await getCollection('blog')).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Resolve author references for all posts
const postsWithAuthors = await Promise.all(
  posts.map(async (post) => ({
    ...post,
    authors: await getEntries(post.data.authors),
  })),
);
---

<Base title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <main class="py-8">
    <section class="max-w-4xl mx-auto">
      <h1 class="text-3xl font-bold mb-8">Blog</h1>
      <ul class="space-y-8">
        {
          postsWithAuthors.map((post) => (
            <li class="border-b pb-8 last:border-b-0">
              <a href={`/blog/${post.id}`}>
                {post.data.heroImage && (
                  <Image width={720} height={360} src={post.data.heroImage} alt="" class="mb-4" />
                )}
                <h4 class="title text-2xl font-semibold mb-2">{post.data.title}</h4>
                <p class="date text-gray-600 mb-2">
                  <FormattedDate date={post.data.pubDate} />
                </p>
                <p class="authors text-sm">
                  By{' '}
                  {post.authors.map((author: any, index: number) => (
                    <>
                      <a href={`/blog/authors/${author.id}`} class="hover:underline">
                        {author.data.name}
                      </a>
                      {index < post.authors.length - 1 && ', '}
                    </>
                  ))}
                </p>
              </a>
            </li>
          ))
        }
      </ul>
    </section>
  </main>
</Base>
