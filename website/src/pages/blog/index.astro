---
import { Image } from 'astro:assets';
import { getCollection, getEntries } from 'astro:content';

import FormattedDate from '@/components/FormattedDate.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '@/consts';
import Base from '@/layouts/Base.astro';

const posts = (await getCollection('blog')).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Resolve author references for all posts
const postsWithAuthors = await Promise.all(
  posts.map(async (post) => ({
    ...post,
    authors: await getEntries(post.data.authors),
  })),
);
---

<Base title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <main>
    <section>
      <h1>Blog</h1>
      <ul>
        {
          postsWithAuthors.map((post) => (
            <li>
              <a href={`/blog/${post.id}`}>
                {post.data.heroImage && <Image width={720} height={360} src={post.data.heroImage} alt="" />}
                <h4 class="title">{post.data.title}</h4>
                <p class="date">
                  <FormattedDate date={post.data.pubDate} />
                </p>
                <p class="authors">
                  By{' '}
                  {post.authors.map((author: any, index: number) => (
                    <>
                      <a href={`/blog/authors/${author.id}`}>{author.data.name}</a>
                      {index < post.authors.length - 1 && ', '}
                    </>
                  ))}
                </p>
              </a>
            </li>
          ))
        }
      </ul>
    </section>
  </main>
</Base>
