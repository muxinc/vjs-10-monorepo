---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';

import FormattedDate from '@/components/FormattedDate.astro';
import { SITE_TITLE } from '@/consts';
import Base from '@/layouts/Base.astro';

export async function getStaticPaths() {
  const authors = await getCollection('authors');
  return authors.map((author) => ({
    params: { author: author.id },
    props: { author },
  }));
}

type Props = {
  author: CollectionEntry<'authors'>;
};

const { author } = Astro.props;

// Get all blog posts by this author
const allPosts = await getCollection('blog');
const authorPosts = allPosts.filter((post) => post.data.authors.some((a) => a.id === author.id));
const sortedPosts = authorPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<Base title={`${author.data.name} - ${SITE_TITLE}`} description={author.data.bio || `Posts by ${author.data.name}`}>
  <main>
    <div>
      <article>
        <div>
          {author.data.avatar && <img src={author.data.avatar} alt={author.data.name} width="150" height="150" />}
          <div>
            <h1>{author.data.name}</h1>
            {author.data.bio && <p>{author.data.bio}</p>}
            {
              author.data.socialLinks && (
                <ul>
                  {author.data.socialLinks.x && (
                    <li>
                      <a href={author.data.socialLinks.x}>X</a>
                    </li>
                  )}
                  {author.data.socialLinks.bluesky && (
                    <li>
                      <a href={author.data.socialLinks.bluesky}>Bluesky</a>
                    </li>
                  )}
                  {author.data.socialLinks.mastodon && (
                    <li>
                      <a href={author.data.socialLinks.mastodon}>Mastodon</a>
                    </li>
                  )}
                  {author.data.socialLinks.github && (
                    <li>
                      <a href={author.data.socialLinks.github}>GitHub</a>
                    </li>
                  )}
                  {author.data.socialLinks.linkedin && (
                    <li>
                      <a href={author.data.socialLinks.linkedin}>LinkedIn</a>
                    </li>
                  )}
                  {author.data.socialLinks.website && (
                    <li>
                      <a href={author.data.socialLinks.website}>Website</a>
                    </li>
                  )}
                </ul>
              )
            }
          </div>
        </div>
      </article>

      <section>
        <h2>Posts by {author.data.shortName}</h2>
        <ul>
          {
            sortedPosts.map((post) => (
              <li>
                <a href={`/blog/${post.id}`}>
                  <h3>{post.data.title}</h3>
                  <p>{post.data.description}</p>
                  <p>
                    <FormattedDate date={post.data.pubDate} />
                  </p>
                </a>
              </li>
            ))
          }
        </ul>
      </section>
    </div>
  </main>
</Base>
